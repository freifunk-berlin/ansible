ensure_policy()
{
  ip rule del $*
  ip rule add $*
}

ensure_bridge()
{
  local brname="$1"
  brctl addbr $brname
  
  if [[ "$?" == "0" ]]; then
    # Bridge did not exist before, we have to initialize it
    ip link set dev $brname up
    ip addr add 172.31.224.1/20 dev $brname
    # Disable forwarding between bridge ports
    # br0ken ebtables -A FORWARD --logical-in $brname -j DROP
    nft list bridge filter &> /dev/null
    if [[ $? == "1" ]]; then
      nft add table bridge filter
      nft 'add chain bridge filter forward { type filter hook input priority 0; policy accept; }'
      nft add rule bridge filter forward iif $brname drop
    fi
  fi
}

ensure_nftables() {
  nft list table nat &> /dev/null
  if [[ "$?" == "1" ]]; then
    nft add table nat
    nft 'add chain nat postrouting { type nat hook postrouting priority 100 ; }'
    nft add rule nat postrouting ip saddr 172.31.224.1/20 oif eth0 snat to 185.183.158.195
  fi

  nft list table ip filter &> /dev/null
  if [[ "$?" == "1" ]]; then
    nft add table ip filter
    nft 'add chain ip filter forward { type filter hook forward priority 0 ; }'
    nft add rule filter forward oifname "eth0" ip daddr 10.0.0.0/8 counter packets 0 bytes 0 reject with icmp type net-prohibited
    nft add rule filter forward oifname "eth0" ip daddr 172.16.0.0/12 counter packets 0 bytes 0 reject with icmp type net-prohibited
    nft add rule filter forward oifname "eth0" ip daddr 192.168.0.0/16 counter packets 0 bytes 0 reject with icmp type net-prohibited
    nft add rule filter forward oifname "eth0" ip daddr 169.254.0.0/16 counter packets 0 bytes 0 reject with icmp type net-prohibited
    nft add rule ip filter forward tcp flags syn tcp option maxseg size set rt mtu
  fi

  # Increasing the size of nf_conntrack hash-table so we don't drop packets
  # because of a full table.
  SIZE=$(cat /sys/module/nf_conntrack/parameters/hashsize)
  [ $SIZE -ne 32768 ] && echo 32768 > /sys/module/nf_conntrack/parameters/hashsize
}
