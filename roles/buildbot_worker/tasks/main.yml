---

- name: Install dependencies for falter build system and openwrt
  apt:
    name:
      - git
      - virtualenv
      - rsync
      - time
      - podman
      - dbus-x11
    state: present
    update_cache: true
    cache_valid_time: 3600

- name: Create unprivileged user for buildbot
  user:
    name: "{{ machine_user }}"

- name: Create mountpoint for ramdisk
  ansible.builtin.file:
    path: /ramdisk/
    state: directory
    mode: '0755'
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
  when: bbworker_ramdisk

- name: Create ramdisk mount and persist
  ansible.posix.mount:
    path: /ramdisk/
    src: tmpfs
    fstype: tmpfs
    opts: "size={{ bbworker_ramdisk_size }}"
    state: present
    boot: yes
  when: bbworker_ramdisk
  become: true

- name: Create bbworker_path
  ansible.builtin.file:
    path: "{{ bbworker_path }}"
    state: directory
    mode: '0755'
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"

- name: Create path for custom podman storage config
  ansible.builtin.file:
    path: "/home/{{ machine_user }}/.config/containers/"
    state: directory
    mode: '0755'
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
  when: bbworker_ramdisk

- name: Custom podman storage config
  ansible.builtin.copy:
    dest: "/home/{{ machine_user }}/.config/containers/storage.conf"
    mode: '0644'
    content: |
      [storage]
      driver = "overlay"
      runroot = "{{ bbworker_path }}/run/user/$UID/run"
      graphroot = "{{ bbworker_path }}/.local/share/containers/storage/"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
  when: bbworker_ramdisk
  notify: Restart podman

- name: Add buildbot-worker systemd-service-module
  ansible.builtin.template:
    dest: /etc/systemd/system/buildbot-worker.service
    src: systemd-unit.j2
    mode: "0644"
    owner: root
    group: root
  notify: Restart buildbot-worker

- name: Install buildbot-worker
  pip:
    name: buildbot-worker
    version: "{{ buildbot_version }}"
    state: present
    virtualenv: "{{ bbworker_path }}env"
  become_user: "{{ machine_user }}"
  notify:
    - Initialise buildbot-worker
    - Restart buildbot-worker

#- name: Reinstall ramdisk-Worker script (reinstall on boot)
#  ansible.builtin.copy:
#    dest: "/home/{{ machine_user }}/reinstall_bbworker.sh"
#    mode: '0644'
#    content: |
#      #!/bin/bash
#      # (re-)creates the buildbot work er on the ramdisk, everytime the system reboots.
#      mkdir -p "{{ bbworker_path }}"
#      virtualenv "{{ bbworker_path }}env"
#      pip install buildbot-worker=={{ buildbot_version }}
#      source "{{ bbworker_path }}env/bin/activate"
#      "{{ bbworker_path }}/env/bin/buildbot-worker create-worker --umask=0o22 {{ bbworker_path }} {{ bbmaster_fqdn }}:{{ bbmaster_port }} {{ bbworker_name }} {{ bbworker_pwd }}"
#    owner: "{{ machine_user }}"
#    group: "{{ machine_user }}"
#  when: bbworker_ramdisk
#
#- name: Persist ramdisk-Worker
#  ansible.builtin.copy:
#    dest: "/home/{{ machine_user }}/reinstall_bbworker.sh"
#    mode: '0644'
#    content: |
#      #!/bin/bash
#      # (re-)creates the buildbot work er on the ramdisk, everytime the system reboots.
#
#      mkdir -p "{{ bbworker_path }}"
#      virtualenv "{{ bbworker_path }}env"
#      pip install buildbot-worker=={{ buildbot_version }}
#
#      source "{{ bbworker_path }}env/bin/activate"
#      "{{ bbworker_path }}/env/bin/buildbot-worker create-worker --umask=0o22 {{ bbworker_path }} {{ bbmaster_fqdn }}:{{ bbmaster_port }} {{ bbworker_name }} {{ bbworker_pwd }}"
#
#      exit 0
#    owner: "{{ machine_user }}"
#    group: "{{ machine_user }}"
#  when: bbworker_ramdisk

- name: Flush handlers
  meta: flush_handlers

- name: Add worker info directory
  file:
    path: "{{ bbworker_path }}info"
    state: directory
    mode: "0755"

- name: Add workers admin-info
  template:
    dest: "{{ bbworker_path }}info/admin"
    src: admin.j2
    mode: "0644"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"

- name: Add worker description
  template:
    dest: "{{ bbworker_path }}/info/host"
    src: host.j2
    mode: "0644"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
  notify: Restart buildbot-worker

- name: Adjust permissions on buildbot-worker description
  ansible.builtin.file:
    path: "{{ bbworker_path }}"
    state: directory
    # needs to be this high. Otherwise service will not start.
    mode: "0755"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
    recurse: true
  notify: Restart buildbot-worker
  when: not bbworker_ramdisk

- name: Adjust permissions on buildbot-worker description
  ansible.builtin.file:
    path: "{{ bbworker_path }}"
    state: directory
    # needs to be this high. Otherwise service will not start.
    mode: "0755"
    owner: "{{ machine_user }}"
    group: "{{ machine_user }}"
  notify: Restart buildbot-worker
  when: bbworker_ramdisk
