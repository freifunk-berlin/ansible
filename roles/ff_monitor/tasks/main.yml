---
- name: Add grafana repo
  ansible.builtin.deb822_repository:
    name: grafana
    types:
      - deb
    uris: https://apt.grafana.com
    suites: stable
    components: main
    signed_by: /etc/apt/keyrings/grafana.gpg

- name: Install dependencies
  ansible.builtin.apt:
    name:
      - grafana
      - prometheus
      - collectd
      - docker.io
    state: present
    update_cache: true
    cache_valid_time: 3600

- name: Copy prometheus config
  ansible.builtin.template:
    dest: /etc/prometheus/prometheus.yml
    src: prometheus.yml.j2
    mode: "0640"
    owner: prometheus
    group: prometheus
  notify: Restart prometheus

- name: Copy prometheus defaults
  ansible.builtin.template:
    dest: /etc/default/prometheus
    src: prometheus.j2
    mode: "0640"
    owner: root
    group: root
  notify: Restart prometheus

- name: Start prometheus collectd-exporter
  community.docker.docker_container:
    name: collectd-exporter
    state: started
    restart_policy: unless-stopped
    image: prom/collectd-exporter
    command: --collectd.listen-address=":25826"
    ports:
      - 9104:9103
      - 127.0.0.1:25827:25826/udp
  tags:
    - collectd-exporter

- name: Copy grafana config
  ansible.builtin.template:
    dest: /etc/grafana/grafana.ini
    src: grafana.ini.j2
    mode: "0640"
    owner: grafana
    group: grafana
  notify: Restart grafana

- name: Copy collectd config
  ansible.builtin.template:
    dest: /etc/collectd/collectd.conf
    src: collectd.conf.j2
    mode: "0644"
    owner: root
    group: root
  notify: Restart collectd

- name: Add cleanup task for data that hasn't been updated in 30 days
  ansible.builtin.cron:
    name: remove old rrd files
    special_time: daily
    user: root
    job: find /mnt/collectd/rrd/ -type f -mtime +30 -delete; find /mnt/collectd/rrd/ -type d -empty -delete

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: "0750"
    owner: www-data
    group: www-data
  with_items:
    - /srv/www/monitor.berlin.freifunk.net/cgp/
    - /srv/www/monitor.berlin.freifunk.net/metrics/
    - /srv/www/monitor.berlin.freifunk.net/static/
    - /opt/helperscripts/

- name: Copy firmwaremetrics
  ansible.builtin.copy:
    src: files/firmwaremetrics/
    dest: /srv/www/monitor.berlin.freifunk.net/metrics/firmware/
    mode: "0750"
    owner: www-data
    group: www-data

- name: Copy helperscripts
  ansible.builtin.copy:
    src: files/{{ item }}
    dest: /opt/helperscripts/
    owner: www-data
    group: www-data
    mode: "0750"
  with_items:
    - create_node_geojson.py
    - create_node_list.py

- name: Cronjob to create node json
  ansible.builtin.cron:
    name: create node json
    special_time: daily
    user: www-data
    job: /opt/helperscripts/create_node_list.py > /srv/www/monitor.berlin.freifunk.net/static/nodes.json

- name: Cronjob to create node geojson
  ansible.builtin.cron:
    name: create node geojson
    special_time: daily
    user: www-data
    job: /opt/helperscripts/create_node_geojson.py > /srv/www/monitor.berlin.freifunk.net/static/nodes_geojson.json

- name: Checkout CGP Repo
  become: true
  become_user: www-data
  ansible.builtin.git:
    repo: https://github.com/freifunk-berlin/CGP.git
    dest: /srv/www/monitor.berlin.freifunk.net/cgp/
    version: master
    force: true

- name: Copy CGP config
  ansible.builtin.template:
    dest: /srv/www/monitor.berlin.freifunk.net/cgp/conf/config.local.php
    src: config.local.php.j2
    mode: "0644"
    owner: www-data
    group: www-data
