---
- name: install dependencies
  apt:
    name:
      - build-essential
      - default-libmysqlclient-dev
      - git
      - mariadb-server
      - python3-dev
      - python3-mysqldb
      - virtualenv
    state: present
    update_cache: true
    cache_valid_time: 3600

- name: copy mariadb server config
  template:
    src: "mariadb-server.cnf.j2"
    dest: /etc/mysql/mariadb.conf.d/50-server.cnf
    mode: 0640
    owner: buildbot
    group: root
  notify: mariadb | restart

- name: Create buildbot database
  community.mysql.mysql_db:
    name: buildbot
    state: present

- name: Create buildbot mariadb user
  community.mysql.mysql_user:
    name: buildbot
    password: "{{ buildbot_mariadb_user_password }}"
    priv: 'buildbot.*:ALL'
    state: present

- name: create buildbot user
  ansible.builtin.user:
    name: buildbot
    comment: buildbot application user
    create_home: no
    home: /usr/local/src/buildbot

- name: create directories
  file:
    state: directory
    path: "{{ item }}"
    owner: buildbot
    group: www-data
    mode: 0755
    recurse: yes
  with_items:
    - /usr/local/src/www/htdocs/buildbot/
    - /usr/local/src/buildbot
    - /usr/local/src/www/htdocs/.well-known/

- name: install buildbot in venv
  pip:
    name: buildbot[bundle]
    version: "{{ buildbot_version }}"
    virtualenv: /usr/local/src/buildbot/env
  notify: buildbot | initialise

- name: install mysql dependencies in venv
  pip:
    name: mysqlclient
    virtualenv: /usr/local/src/buildbot/env

- name: Flush handlers
  meta: flush_handlers

- name: copy buildsteps
  copy:
    src: "{{ item }}"
    dest: /usr/local/src/buildbot/masters/master/
    mode: 0640
    owner: buildbot
    group: root
  notify: buildbot | restart
  with_items:
    - buildsteps_feed.py
    - buildsteps_image.py

- name: copy buildbot config
  template:
    src: "{{ buildbot_config_template }}"
    dest: /usr/local/src/buildbot/masters/master/master.cfg
    mode: 0640
    owner: buildbot
    group: root
  notify: buildbot | restart

- name: apply workers-credentials
  template:
    dest: /usr/local/src/buildbot/masters/master/worker.py
    src: worker.py.j2
    mode: 0764
    owner: buildbot
    group: root
  notify: buildbot | restart

- name: add buildbot systemd-service-module
  copy:
    dest: /etc/systemd/system/buildbot.service
    mode: 0644
    content: |
      [Unit]
      Description=Buildbot-master for Freifunk-Berlin

      [Service]
      User=buildbot
      Group=buildbot
      WorkingDirectory=/usr/local/src/buildbot/masters/master
      Environment=PATH=/usr/local/src/buildbot/env/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin
      ExecStart=/usr/local/src/buildbot/env/bin/buildbot start --nodaemon
      ExecReload=/bin/kill -HUP $MAINPID

      [Install]
      WantedBy=multi-user.target
  notify: buildbot | restart

- name: firmware-selector initialised already?
  stat:
    path: /usr/local/src/www/htdocs/firmware-selector
  register: fw_selector

- name: checkout firmware-selector
  git:
    repo: 'https://github.com/freifunk-berlin/falter-firmware-selector.git'
    version: falter_stable
    dest: /usr/local/src/www/htdocs/firmware-selector
  when: not fw_selector.stat.exists

- name: insert cronjob for firmware-selector
  cron:
    name: update snapshots in firmware-selector regularily.
    minute: "*/10"
    job: /usr/local/src/www/htdocs/firmware-selector/get_profiles_local.sh
    user: root
    cron_file: ansible_fwselector_update

- name: copy extra files
  copy:
    src: "{{ item }}"
    dest: /usr/local/src
    mode: 0700
    owner: buildbot
    group: root
  with_items:
    - clear_target.sh
    - packagefeed_master.pub
    - packagefeed_master.sec
    - sign_packages.sh

...
