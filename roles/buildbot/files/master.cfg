# -*- python -*-
# ex: set filetype=python:

#
# Notes:
# * signify key is expected at <masterdir>/packagefeed_master.sec
# * build artifacts are copied to <masterdir>/public_html
# * additional source files are required: {secs,packages,targets,asyncbuild,notify}.py
#

#
# Noteworthy Buildbot features used here:
#
# Dynamic build factories a.k.a. addStepsAfterCurrentStep
# https://docs.buildbot.net/3.6.0/manual/configuration/buildfactories.html
#
# Trigger steps and Triggerable schedulers
# https://docs.buildbot.net/3.6.0/manual/configuration/steps/trigger.html
#
# Parallelized Trigger steps, adapter from @vit9696's code
# https://github.com/buildbot/buildbot/issues/3088
#
# Virtual builders
# https://docs.buildbot.net/3.6.0/manual/configuration/builders.html
#

# see ./secrets.py and ./secrets.py.sample
from secs import *
from config import workers, matrixHomeserver, matrixRoom

githubOrg = 'freifunk-berlin'

title = 'Freifunk Berlin'
titleURL = 'https://buildbot.berlin.freifunk.net/'
buildbotURL = 'https://buildbot.berlin.freifunk.net/'
wwwPort = 8010
pbPort = 9989

from buildbot.plugins import *

c = BuildmasterConfig = {}

c['title'] = title
c['titleURL'] = titleURL
c['buildbotURL'] = buildbotURL
c['buildbotNetUsageData'] = None

c['db'] = {'db_url': dbURL}
c['protocols'] = {'pb': {'port': pbPort}}
c['workers'] = [worker.Worker(w[0], w[1]) for w in workers]

c['www'] = dict(port=wwwPort,
                plugins=dict(waterfall_view={}, console_view={}, grid_view={}))

c['www']['auth'] = util.GitHubAuth(githubClientID, githubClientSecret)
c['www']['authz'] = util.Authz(
    roleMatchers=[util.RolesFromGroups()],
    allowRules=[util.AnyControlEndpointMatcher(role=githubOrg)])
c['www']['avatar_methods'] = [util.AvatarGitHub()]

c['change_source'] = []
c['services'] = []
c['schedulers'] = []
c['builders'] = []

# see ./packages.py
from packages import packagesConfig
c = packagesConfig(c)

# see ./targets.py
from targets import targetsConfig
c = targetsConfig(c)

# see ./notify.py
from notify import MatrixNotifier
c['services'].append(
    MatrixNotifier(
        homeserver=matrixHomeserver,
        accessToken=matrixAccessToken,
        room=matrixRoom))
